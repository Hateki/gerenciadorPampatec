package ideiah.sisponto02.modelo;
// Generated 14/06/2016 17:19:19 by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Objects;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Funcionario generated by hbm2java
 */
@Entity
@Table(name = "funcionario", schema = "public"
)
public class Funcionario implements java.io.Serializable {

    private int idfuncionario;
    private Diretor diretor;
    private Endereco endereco;
    private String nome;
    private String matricula;
    private String telefone;
    private String email;
    private String cpf;
    private String rg;
    private boolean estagioObrigatorio;
    private boolean ativo;
    private String curso;
    private String instituicao;
    private String codigoAcesso;
    private Set<Ponto> pontos = new HashSet<Ponto>(0);

    public Funcionario() {
    }

    @Id
    @Column(name = "idfuncionario", unique = true, nullable = false)
    public int getIdfuncionario() {
        return this.idfuncionario;
    }

    public void setIdfuncionario(int idfuncionario) {
        this.idfuncionario = idfuncionario;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "diretor_iddiretor")
    public Diretor getDiretor() {
        return this.diretor;
    }

    public void setDiretor(Diretor diretor) {
        this.diretor = diretor;
    }

    @ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
    @JoinColumn(name = "endereco_idendereco", nullable = false)
    public Endereco getEndereco() {
        return this.endereco;
    }

    public void setEndereco(Endereco endereco) {
        this.endereco = endereco;
    }

    @Column(name = "nome", nullable = false, length = 45)
    public String getNome() {
        return this.nome;
    }

    public void setNome(String nome) {
        this.nome = nome;
    }

    @Column(name = "matricula", nullable = false, length = 20)
    public String getMatricula() {
        return this.matricula;
    }

    public void setMatricula(String matricula) {
        this.matricula = matricula;
    }

    @Column(name = "telefone", nullable = false, length = 15)
    public String getTelefone() {
        return this.telefone;
    }

    public void setTelefone(String telefone) {
        this.telefone = telefone;
    }

    @Column(name = "email", nullable = false, length = 50)
    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    @Column(name = "cpf", nullable = false, length = 11)
    public String getCpf() {
        return this.cpf;
    }

    public void setCpf(String cpf) {
        this.cpf = cpf;
    }

    @Column(name = "rg", nullable = false, length = 15)
    public String getRg() {
        return this.rg;
    }

    public void setRg(String rg) {
        this.rg = rg;
    }

    @Column(name = "estagio_obrigatorio", nullable = false)
    public boolean isEstagioObrigatorio() {
        return this.estagioObrigatorio;
    }

    public void setEstagioObrigatorio(boolean estagioObrigatorio) {
        this.estagioObrigatorio = estagioObrigatorio;
    }

    @Column(name = "ativo", nullable = false)
    public boolean isAtivo() {
        return this.ativo;
    }

    public void setAtivo(boolean ativo) {
        this.ativo = ativo;
    }

    @Column(name = "curso", nullable = false, length = 100)
    public String getCurso() {
        return this.curso;
    }

    public void setCurso(String curso) {
        this.curso = curso;
    }

    @Column(name = "instituicao", nullable = false, length = 100)
    public String getInstituicao() {
        return this.instituicao;
    }

    public void setInstituicao(String instituicao) {
        this.instituicao = instituicao;
    }

    @Column(name = "codigo_acesso", nullable = false, length = 15)
    public String getCodigoAcesso() {
        return this.codigoAcesso;
    }

    public void setCodigoAcesso(String codigoAcesso) {
        this.codigoAcesso = codigoAcesso;
    }

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "funcionario")
    public Set<Ponto> getPontos() {
        return this.pontos;
    }

    public void setPontos(Set<Ponto> pontos) {
        this.pontos = pontos;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 29 * hash + this.idfuncionario;
        hash = 29 * hash + Objects.hashCode(this.endereco);
        hash = 29 * hash + Objects.hashCode(this.nome);
        hash = 29 * hash + Objects.hashCode(this.matricula);
        hash = 29 * hash + Objects.hashCode(this.telefone);
        hash = 29 * hash + Objects.hashCode(this.email);
        hash = 29 * hash + Objects.hashCode(this.cpf);
        hash = 29 * hash + Objects.hashCode(this.rg);
        hash = 29 * hash + (this.estagioObrigatorio ? 1 : 0);
        hash = 29 * hash + (this.ativo ? 1 : 0);
        hash = 29 * hash + Objects.hashCode(this.curso);
        hash = 29 * hash + Objects.hashCode(this.instituicao);
        hash = 29 * hash + Objects.hashCode(this.codigoAcesso);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Funcionario other = (Funcionario) obj;
        if (!Objects.equals(this.nome, other.nome)) {
            return false;
        }
        if (!Objects.equals(this.matricula, other.matricula)) {
            return false;
        }
        if (!Objects.equals(this.telefone, other.telefone)) {
            return false;
        }
        if (!Objects.equals(this.email, other.email)) {
            return false;
        }
        if (!Objects.equals(this.cpf, other.cpf)) {
            return false;
        }
        if (!Objects.equals(this.rg, other.rg)) {
            return false;
        }
        if (this.estagioObrigatorio != other.estagioObrigatorio) {
            return false;
        }
        if (!Objects.equals(this.curso, other.curso)) {
            return false;
        }
        if (!Objects.equals(this.instituicao, other.instituicao)) {
            return false;
        }
        if (!Objects.equals(this.codigoAcesso, other.codigoAcesso)) {
            return false;
        }
        return true;
    }

}
